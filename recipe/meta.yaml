{% set version = '0.7' %}

{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-gsubfn
  version: {{ version|replace("-", "_") }}

source:
  fn: gsubfn_{{ version }}.tar.gz
  url:
    - {{ cran_mirror }}/src/contrib/gsubfn_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/gsubfn/gsubfn_{{ version }}.tar.gz
  sha256: 89351df9e65722d2862f26a0a3985666de3c86e8400808ced8a6eb6e165a4602

build:
  noarch: generic
  number: 1004
  rpaths:
    - lib/R/lib/
    - lib/

# Suggests: boot, chron, grid, lattice, quantreg, svUnit, tcltk, zoo
requirements:
  host:
    - r-base
    - r-proto

  run:
    - r-base
    - r-proto

test:
  commands:
    - $R -e "library('gsubfn')"           # [not win]
    - "\"%R%\" -e \"library('gsubfn')\""  # [win]

about:
  home: https://github.com/ggrothendieck/gsubfn
  license: GPL (>= 2)
  summary: The gsubfn function is like gsub but can take a replacement  function or certain other
    objects instead of the replacement string. Matches and back references are input
    to the replacement function and  replaced by the function output.   gsubfn can be
    used to split strings  based on content rather than delimiters and for quasi-perl-style
    string  interpolation. The package also has facilities for translating formulas  to
    functions and allowing such formulas in function calls instead of  functions.  This
    can be used with R functions such as apply, sapply, lapply, optim, integrate, xyplot,
    Filter and any other function that  expects another function as an input argument
    or functions like cat or sql calls that may involve strings where substitution is
    desirable. There is also a facility for returning multiple objects from functions
    and a version of transform that allows the RHS to refer to LHS used in the same
    transform.
  license_family: GPL3
  license_file: '{{ environ["PREFIX"] }}/lib/R/share/licenses/GPL-3'

extra:
  recipe-maintainers:
    - conda-forge/r
